buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.1.RELEASE")
    }
}

plugins {
    id "io.spring.dependency-management" version "0.4.0.RELEASE"
}

version "0.1"
group "com.github.jlgrock.autograder"


apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'

ext {
    gradleWrapperVersion = project.gradleWrapperVersion
}

//assets {
//    minifyJs = true
//    minifyCss = true
//}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

dependencies {
    compile(
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.webjars:jquery:2.1.1",
            "org.webjars:angularjs:1.3.8",
            "org.webjars:bootstrap:3.2.0",
            'com.spotify:docker-client:2.7.7'
    )
    runtime('mysql:mysql-connector-java:5.1.6') // provided at runtime

    testCompile(
            "junit:junit",
            "org.hamcrest:hamcrest-core:1.3", // only necessary if Hamcrest matchers are used
            "org.spockframework:spock-core:1.0-groovy-2.4"
    )
    testRuntime (
            "cglib:cglib-nodep:3.1",  // allows mocking of classes (in addition to interfaces)
            "org.objenesis:objenesis:2.1", // allows mocking of classes without default constructor (together with CGLIB)
            "com.h2database:h2:1.4.182" //test db
    )

}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
